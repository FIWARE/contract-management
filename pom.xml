<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>io.micronaut.platform</groupId>
        <artifactId>micronaut-parent</artifactId>
        <version>4.7.1</version>
    </parent>

    <groupId>org.fiware.iam</groupId>
    <artifactId>contract-management</artifactId>
    <version>0.0.1</version>

    <description>${project.description}</description>
    <url>${project.url}</url>
    <licenses>
        <license>
            <name>${project.license.name}</name>
            <url>${project.license.url}</url>
        </license>
    </licenses>

    <developers>
        <developer>
            <name>${project.author.name}</name>
            <email>${project.author.email}</email>
        </developer>
    </developers>

    <properties>
        <jdk.version>21</jdk.version>
        <release.version>21</release.version>
        <micronaut.version>4.7.1</micronaut.version>

        <!-- project info -->
        <project.author.name>Tim Smyth</project.author.name>
        <project.author.email>tim.smyth@fiware.org</project.author.email>
        <project.description>Service to handle service contracts and the authorization
        </project.description>
        <project.summary>A service to reflect TM Forum contracts in the trusted issuers list
        </project.summary>
        <project.url>https://github.com/fiware/contract-management</project.url>
        <project.license.name>MIT</project.license.name>
        <project.license.identifier>MIT</project.license.identifier>
        <project.license.url>https://opensource.org/license/mit/</project.license.url>
        <project.title>FIWARE Contract Management</project.title>
        <project.vendor>FIWARE Foundation, e.V.</project.vendor>
        <project.contact.domain>fiware.org</project.contact.domain>
        <project.contact.email>tim.smyth@fiware.org</project.contact.email>

        <!-- TM Forum APIs -->
        <tmforum.productorder.api.url>
            https://raw.githubusercontent.com/FIWARE/tmforum-api/refs/heads/main/api/tm-forum/product-ordering-management/api.json
        </tmforum.productorder.api.url>
        <tmforum.productcatalog.api.url>
            https://raw.githubusercontent.com/FIWARE/tmforum-api/refs/heads/main/api/tm-forum/product-catalog/api.json
        </tmforum.productcatalog.api.url>
        <tmforum.servicecatalog.api.url>
            https://raw.githubusercontent.com/FIWARE/tmforum-api/refs/heads/main/api/tm-forum/service-catalog/api.json
        </tmforum.servicecatalog.api.url>
        <tmforum.resourcecatalog.api.url>
            https://raw.githubusercontent.com/FIWARE/tmforum-api/refs/heads/main/api/tm-forum/resource-catalog/api.json
        </tmforum.resourcecatalog.api.url>
        <tmforum.party.api.url>
            https://raw.githubusercontent.com/FIWARE/tmforum-api/refs/heads/main/api/tm-forum/party-catalog/api.json
        </tmforum.party.api.url>
        <tmforum.agreement.api.url>
            https://raw.githubusercontent.com/FIWARE/tmforum-api/refs/heads/main/api/tm-forum/agreement/api.json
        </tmforum.agreement.api.url>
        <tmforum.quote.api.url>
            https://raw.githubusercontent.com/FIWARE/tmforum-api/refs/heads/main/api/tm-forum/quote/api.json
        </tmforum.quote.api.url>

        <!-- Rainbow API -->
        <rainbow.api>${project.basedir}/api/rainbow.yaml</rainbow.api>

        <!-- Trusted Issuers List API -->
        <til.api.url>https://raw.githubusercontent.com/FIWARE/trusted-issuers-list/main/api/trusted-issuers-list.yaml
        </til.api.url>

        <!-- oci -->
        <exec.mainClass>org.fiware.iam.Application</exec.mainClass>
        <image.registry>quay.io</image.registry>
        <image.repository>fiware</image.repository>

        <!-- lazy dev -->
        <version.org.mapstruct>1.5.3.Final</version.org.mapstruct>
        <version.org.projectlombok>1.18.36</version.org.projectlombok>

        <!-- logging -->
        <version.io.kokuwa.micronaut.logging>3.1.0</version.io.kokuwa.micronaut.logging>

        <!-- code gen -->
        <version.org.openapitools.generator-maven-plugin>6.6.0</version.org.openapitools.generator-maven-plugin>
        <version.io.kokuwa.micronaut.codegen>3.4.4</version.io.kokuwa.micronaut.codegen>

        <!-- test -->
        <version.org.mockito.mocktio-all>1.10.19</version.org.mockito.mocktio-all>
        <version.io.kokuwa.maven.k3s-plugin>1.5.0</version.io.kokuwa.maven.k3s-plugin>
        <version.org.awaitility>4.2.0</version.org.awaitility>

        <!-- configure your local ip address here, in order to enable containers calling back the (local)test-instance -->
        <local.ip>192.168.2.224</local.ip>

        <!-- build -->
        <version.org.codehaus.mojo.build-helper-maven-plugin>3.4.0</version.org.codehaus.mojo.build-helper-maven-plugin>
        <version.org.jacoco.maven-plugin>0.8.12</version.org.jacoco.maven-plugin>
        <version.org.eluder.coveralls.maven-plugin>4.3.0</version.org.eluder.coveralls.maven-plugin>
        <coveralls.token>myToken</coveralls.token>
        <jacoco.reportFolder>${project.build.directory}/jacoco/${artifactId}</jacoco.reportFolder>
        <jacoco.utReportFile>${jacoco.reportFolder}/test.exec</jacoco.utReportFile>

    </properties>

    <dependencies>

        <!-- lazy dev -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${version.org.projectlombok}</version>
        </dependency>
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
            <version>${version.org.mapstruct}</version>
        </dependency>

        <!-- micronaut -->
        <dependency>
            <groupId>org.graalvm.nativeimage</groupId>
            <artifactId>svm</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>io.micronaut</groupId>
            <artifactId>micronaut-runtime</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>io.micronaut</groupId>
            <artifactId>micronaut-management</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>io.micronaut</groupId>
            <artifactId>micronaut-inject</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>io.micronaut</groupId>
            <artifactId>micronaut-http-server-netty</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>io.micronaut</groupId>
            <artifactId>micronaut-http-client</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>io.micronaut.validation</groupId>
            <artifactId>micronaut-validation</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>io.micronaut</groupId>
            <artifactId>micronaut-jackson-databind</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>io.micronaut.reactor</groupId>
            <artifactId>micronaut-reactor</artifactId>
            <scope>compile</scope>
        </dependency>
        <!-- required for config micronaut > 4.x -->
        <dependency>
            <groupId>org.yaml</groupId>
            <artifactId>snakeyaml</artifactId>
            <scope>runtime</scope>
        </dependency>
        <!-- logging -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.datatype/jackson-datatype-jsr310 -->
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
            <version>2.18.2</version>
        </dependency>
        <dependency>
            <groupId>org.openapitools</groupId>
            <artifactId>jackson-databind-nullable</artifactId>
            <version>0.2.6</version>
        </dependency>

        <!-- Tests -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.micronaut.test</groupId>
            <artifactId>micronaut-test-junit5</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.micronaut.test</groupId>
            <artifactId>micronaut-test-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${version.org.mockito.mocktio-all}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.hamcrest</groupId>
                    <artifactId>hamcrest-core</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.konghq</groupId>
            <artifactId>unirest-java</artifactId>
            <version>3.11.09</version>
            <classifier>standalone</classifier>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
            <version>${version.org.awaitility}</version>
            <scope>test</scope>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.hamcrest/hamcrest -->
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest</artifactId>
            <version>2.2</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
            <resource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <!-- generate sources from openapi spec -->
            <plugin>
                <groupId>org.openapitools</groupId>
                <artifactId>openapi-generator-maven-plugin</artifactId>
                <version>${version.org.openapitools.generator-maven-plugin}</version>
                <executions>
                    <execution>
                        <id>rainbow</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${rainbow.api}</inputSpec>
                            <apiPackage>org.fiware.rainbow.api</apiPackage>
                            <strictSpec>true</strictSpec>
                            <modelPackage>org.fiware.rainbow.model</modelPackage>
                            <generateAliasAsModel>true</generateAliasAsModel>
                            <generatorName>micronaut</generatorName>
                            <modelNameSuffix>VO</modelNameSuffix>
                            <output>${project.build.directory}</output>
                            <configOptions>
                                <clientId>rainbow</clientId>
                                <fullJavaUtil>true</fullJavaUtil>
                                <useOptional>false</useOptional>
                                <useGenericResponse>true</useGenericResponse>
                                <useLombokGenerated>true</useLombokGenerated>
                                <introspected>true</introspected>
                                <useBeanValidation>false</useBeanValidation>
                                <supportAsync>true</supportAsync>
                                <jacksonDatabindNullable>false</jacksonDatabindNullable>
                                <generateExamples>true</generateExamples>
                            </configOptions>
                            <typeMappings>
                                <typeMapping>java.util.Date=java.time.Instant</typeMapping>
                            </typeMappings>
                        </configuration>
                    </execution>
                    <execution>
                        <id>til</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${til.api.url}</inputSpec>
                            <apiPackage>org.fiware.iam.til.api</apiPackage>
                            <strictSpec>true</strictSpec>
                            <modelPackage>org.fiware.iam.til.model</modelPackage>
                            <generateAliasAsModel>true</generateAliasAsModel>
                            <generateApiTests>true</generateApiTests>
                            <generatorName>micronaut</generatorName>
                            <modelNameSuffix>VO</modelNameSuffix>
                            <output>${project.build.directory}</output>
                            <configOptions>
                                <clientId>trusted-issuers-list</clientId>
                                <fullJavaUtil>true</fullJavaUtil>
                                <useOptional>false</useOptional>
                                <useGenericResponse>true</useGenericResponse>
                                <useLombokGenerated>true</useLombokGenerated>
                                <introspected>true</introspected>
                                <useBeanValidation>false</useBeanValidation>
                                <supportAsync>true</supportAsync>
                                <jacksonDatabindNullable>false</jacksonDatabindNullable>
                                <generateExamples>true</generateExamples>
                            </configOptions>
                            <typeMappings>
                                <typeMapping>java.util.Date=java.time.Instant</typeMapping>
                            </typeMappings>
                        </configuration>
                    </execution>
                    <execution>
                        <id>openapi-product-ordering-api</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${tmforum.productorder.api.url}</inputSpec>
                            <strictSpec>true</strictSpec>
                            <modelPackage>org.fiware.iam.tmforum.productorder.model</modelPackage>
                            <apiPackage>org.fiware.iam.tmforum.productorder.api</apiPackage>
                            <generatorName>micronaut</generatorName>
                            <modelNameSuffix>VO</modelNameSuffix>
                            <output>${project.build.directory}</output>
                            <generateSupportingFiles>false</generateSupportingFiles>
                            <configOptions>
                                <clientId>product-order</clientId>
                                <fullJavaUtil>true</fullJavaUtil>
                                <useOptional>false</useOptional>
                                <useGenericResponse>true</useGenericResponse>
                                <useLombokGenerated>true</useLombokGenerated>
                                <introspected>true</introspected>
                                <useBeanValidation>false</useBeanValidation>
                                <supportAsync>true</supportAsync>
                                <jacksonDatabindNullable>false</jacksonDatabindNullable>
                            </configOptions>
                            <typeMappings>
                                <typeMapping>java.util.Date=java.time.Instant</typeMapping>
                            </typeMappings>
                        </configuration>
                    </execution>
                    <execution>
                        <id>openapi-agreement-api</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${tmforum.agreement.api.url}</inputSpec>
                            <strictSpec>true</strictSpec>
                            <modelPackage>org.fiware.iam.tmforum.agreement.model</modelPackage>
                            <apiPackage>org.fiware.iam.tmforum.agreement.api</apiPackage>
                            <generateAliasAsModel>true</generateAliasAsModel>
                            <generatorName>micronaut</generatorName>
                            <modelNameSuffix>TmfVO</modelNameSuffix>
                            <output>${project.build.directory}</output>
                            <generateSupportingFiles>false</generateSupportingFiles>
                            <configOptions>
                                <clientId>tmforum-agreement-api</clientId>
                                <fullJavaUtil>true</fullJavaUtil>
                                <useOptional>false</useOptional>
                                <useGenericResponse>true</useGenericResponse>
                                <useLombokGenerated>true</useLombokGenerated>
                                <introspected>true</introspected>
                                <useBeanValidation>false</useBeanValidation>
                                <supportAsync>true</supportAsync>
                                <jacksonDatabindNullable>false</jacksonDatabindNullable>
                            </configOptions>
                            <typeMappings>
                                <typeMapping>java.util.Date=java.time.Instant</typeMapping>
                            </typeMappings>
                        </configuration>
                    </execution>
                    <execution>
                        <id>openapi-product-catalog-api</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${tmforum.productcatalog.api.url}</inputSpec>
                            <strictSpec>true</strictSpec>
                            <modelPackage>org.fiware.iam.tmforum.productcatalog.model</modelPackage>
                            <apiPackage>org.fiware.iam.tmforum.productcatalog.api</apiPackage>
                            <generatorName>micronaut</generatorName>
                            <modelNameSuffix>VO</modelNameSuffix>
                            <output>${project.build.directory}</output>
                            <generateSupportingFiles>false</generateSupportingFiles>
                            <generateModels>true</generateModels>
                            <configOptions>
                                <clientId>product-catalog</clientId>
                                <fullJavaUtil>true</fullJavaUtil>
                                <useOptional>false</useOptional>
                                <useGenericResponse>true</useGenericResponse>
                                <useLombokGenerated>true</useLombokGenerated>
                                <introspected>true</introspected>
                                <useBeanValidation>false</useBeanValidation>
                                <supportAsync>true</supportAsync>
                                <jacksonDatabindNullable>false</jacksonDatabindNullable>
                                <generateExamples>true</generateExamples>
                            </configOptions>
                            <typeMappings>
                                <typeMapping>java.util.Date=java.time.Instant</typeMapping>
                            </typeMappings>
                        </configuration>
                    </execution>
                    <execution>
                        <id>openapi-service-catalog-api</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${tmforum.servicecatalog.api.url}</inputSpec>
                            <strictSpec>true</strictSpec>
                            <modelPackage>org.fiware.iam.tmforum.servicecatalog.model</modelPackage>
                            <apiPackage>org.fiware.iam.tmforum.servicecatalog.api</apiPackage>
                            <generatorName>micronaut</generatorName>
                            <modelNameSuffix>VO</modelNameSuffix>
                            <output>${project.build.directory}</output>
                            <generateSupportingFiles>false</generateSupportingFiles>
                            <generateModels>true</generateModels>
                            <configOptions>
                                <clientId>service-catalog</clientId>
                                <fullJavaUtil>true</fullJavaUtil>
                                <useOptional>false</useOptional>
                                <useGenericResponse>true</useGenericResponse>
                                <useLombokGenerated>true</useLombokGenerated>
                                <introspected>true</introspected>
                                <useBeanValidation>false</useBeanValidation>
                                <supportAsync>true</supportAsync>
                                <jacksonDatabindNullable>false</jacksonDatabindNullable>
                                <generateExamples>true</generateExamples>
                            </configOptions>
                            <typeMappings>
                                <typeMapping>java.util.Date=java.time.Instant</typeMapping>
                            </typeMappings>
                        </configuration>
                    </execution>
                    <execution>
                        <id>openapi-ufftata-api-client</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${tmforum.party.api.url}</inputSpec>
                            <apiPackage>org.fiware.iam.tmforum.party.api</apiPackage>
                            <strictSpec>true</strictSpec>
                            <modelPackage>org.fiware.iam.tmforum.party.model</modelPackage>
                            <generatorName>micronaut</generatorName>
                            <modelNameSuffix>VO</modelNameSuffix>
                            <output>${project.build.directory}</output>
                            <generateSupportingFiles>false</generateSupportingFiles>
                            <apisToGenerate>Organization</apisToGenerate>
                            <configOptions>
                                <clientId>party</clientId>
                                <fullJavaUtil>true</fullJavaUtil>
                                <useOptional>false</useOptional>
                                <useGenericResponse>true</useGenericResponse>
                                <useLombokGenerated>true</useLombokGenerated>
                                <introspected>true</introspected>
                                <useBeanValidation>false</useBeanValidation>
                                <supportAsync>true</supportAsync>
                                <jacksonDatabindNullable>false</jacksonDatabindNullable>
                                <generateExamples>true</generateExamples>
                            </configOptions>
                            <typeMappings>
                                <typeMapping>java.util.Date=java.time.Instant</typeMapping>
                            </typeMappings>
                        </configuration>
                    </execution>
                    <execution>
                        <id>openapi-quote-api-client</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${tmforum.quote.api.url}</inputSpec>
                            <apiPackage>org.fiware.iam.tmforum.quote.api</apiPackage>
                            <strictSpec>true</strictSpec>
                            <modelPackage>org.fiware.iam.tmforum.quote.model</modelPackage>
                            <generatorName>micronaut</generatorName>
                            <modelNameSuffix>VO</modelNameSuffix>
                            <output>${project.build.directory}</output>
                            <generateSupportingFiles>false</generateSupportingFiles>
                            <configOptions>
                                <clientId>quote</clientId>
                                <fullJavaUtil>true</fullJavaUtil>
                                <useOptional>false</useOptional>
                                <useGenericResponse>true</useGenericResponse>
                                <useLombokGenerated>true</useLombokGenerated>
                                <introspected>true</introspected>
                                <useBeanValidation>false</useBeanValidation>
                                <supportAsync>true</supportAsync>
                                <jacksonDatabindNullable>false</jacksonDatabindNullable>
                                <generateExamples>true</generateExamples>
                            </configOptions>
                            <typeMappings>
                                <typeMapping>java.util.Date=java.time.Instant</typeMapping>
                            </typeMappings>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>io.kokuwa.micronaut</groupId>
                        <artifactId>micronaut-openapi-codegen</artifactId>
                        <version>${version.io.kokuwa.micronaut.codegen}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <!-- add generated sources -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>${version.org.codehaus.mojo.build-helper-maven-plugin}</version>
                <executions>
                    <execution>
                        <id>openapi-sources</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${project.build.directory}/generated-sources/openapi</source>
                            </sources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>openapi-test-sources</id>
                        <phase>generate-test-sources</phase>
                        <goals>
                            <goal>add-test-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${project.build.directory}/generated-test-sources/openapi</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>io.micronaut.maven</groupId>
                <artifactId>micronaut-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <argLine>@{argLine} --add-opens java.base/java.lang=ALL-UNNAMED --add-opens
                        java.base/java.time=ALL-UNNAMED
                    </argLine>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <argLine>@{argLine} --add-opens java.base/java.lang=ALL-UNNAMED --add-opens
                        java.base/java.time=ALL-UNNAMED
                    </argLine>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${version.org.jacoco.maven-plugin}</version>
                <configuration>
                    <!-- exclude generated code -->
                    <excludes>
                        <exclude>org/fiware/iam/til/api/**/*</exclude>
                        <exclude>org/fiware/iam/til/model/**/*</exclude>
                        <exclude>org/fiware/iam/tmforum/api/**/*</exclude>
                        <exclude>org/fiware/iam/tmforum/model/**/*</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <id>pre-unit-tests</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <!-- Ensures that the code coverage report for unit tests is created after unit tests have been run -->
                    <execution>
                        <id>post-unit-test</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>merge-reports</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>merge</goal>
                        </goals>
                        <configuration>
                            <fileSets>
                                <fileSet>
                                    <directory>${project.basedir}/</directory>
                                    <includes>
                                        <include>*.exec</include>
                                    </includes>
                                </fileSet>
                            </fileSets>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.eluder.coveralls</groupId>
                <artifactId>coveralls-maven-plugin</artifactId>
                <version>${version.org.eluder.coveralls.maven-plugin}</version>
                <configuration>
                    <repoToken>${coveralls.token}</repoToken>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>javax.xml.bind</groupId>
                        <artifactId>jaxb-api</artifactId>
                        <version>2.3.1</version>
                    </dependency>
                </dependencies>

            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <!-- Uncomment to enable incremental compilation -->
                    <!-- <useIncrementalCompilation>false</useIncrementalCompilation> -->
                    <annotationProcessorPaths combine.self="override">
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${version.org.projectlombok}</version>
                        </path>
                        <path>
                            <groupId>org.mapstruct</groupId>
                            <artifactId>mapstruct-processor</artifactId>
                            <version>${version.org.mapstruct}</version>
                        </path>
                        <path>
                            <groupId>io.micronaut</groupId>
                            <artifactId>micronaut-inject-java</artifactId>
                            <version>${micronaut.version}</version>
                        </path>
                        <path>
                            <groupId>io.micronaut</groupId>
                            <artifactId>micronaut-graal</artifactId>
                            <version>${micronaut.version}</version>
                        </path>
                        <path>
                            <groupId>io.micronaut</groupId>
                            <artifactId>micronaut-http-validation</artifactId>
                            <version>${micronaut.version}</version>
                        </path>
                        <path>
                            <groupId>io.micronaut.validation</groupId>
                            <artifactId>micronaut-validation</artifactId>
                            <version>4.8.0</version>
                        </path>
                    </annotationProcessorPaths>
                    <compilerArgs>
                        <arg>-Amicronaut.processing.group=org.fiware.iam</arg>
                        <arg>-Amicronaut.processing.module=contract-management</arg>
                    </compilerArgs>
                </configuration>
                <executions>
                    <execution>
                        <id>test-compile</id>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                        <configuration>
                            <!-- Uncomment to enable incremental compilation -->
                            <!-- <useIncrementalCompilation>false</useIncrementalCompilation> -->
                            <annotationProcessorPaths combine.self="override">
                                <path>
                                    <groupId>org.projectlombok</groupId>
                                    <artifactId>lombok</artifactId>
                                    <version>${version.org.projectlombok}</version>
                                </path>
                                <path>
                                    <groupId>org.mapstruct</groupId>
                                    <artifactId>mapstruct-processor</artifactId>
                                    <version>${version.org.mapstruct}</version>
                                </path>
                                <path>
                                    <groupId>io.micronaut</groupId>
                                    <artifactId>micronaut-inject-java</artifactId>
                                    <version>${micronaut.version}</version>
                                </path>
                                <path>
                                    <groupId>io.micronaut</groupId>
                                    <artifactId>micronaut-graal</artifactId>
                                    <version>${micronaut.version}</version>
                                </path>
                                <path>
                                    <groupId>io.micronaut</groupId>
                                    <artifactId>micronaut-http-validation</artifactId>
                                    <version>${micronaut.version}</version>
                                </path>
                                <path>
                                    <groupId>io.micronaut.validation</groupId>
                                    <artifactId>micronaut-validation</artifactId>
                                    <version>4.8.0</version>
                                </path>
                            </annotationProcessorPaths>
                            <compilerArgs>
                                <arg>-Amicronaut.processing.group=org.fiware.iam</arg>
                                <arg>-Amicronaut.processing.module=contract-management</arg>
                            </compilerArgs>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>lib/</classpathPrefix>
                            <mainClass>org.fiware.iam.Application</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>

            <!-- run tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                    <failIfNoTests>true</failIfNoTests>
                    <includes>
                        <include>**/*IT.java</include>
                    </includes>
                </configuration>
                <executions>
                    <execution>
                        <id>test</id>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>verify</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>io.kokuwa.maven</groupId>
                <artifactId>k3s-maven-plugin</artifactId>
                <version>${version.io.kokuwa.maven.k3s-plugin}</version>
                <configuration>
                    <skip>true</skip>
                </configuration>
                <executions>
                    <execution>
                        <id>prepare-test-cluster</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>run</goal>
                            <goal>image</goal>
                            <goal>apply</goal>
                        </goals>
                        <configuration>
                            <timeout>1200</timeout>
                            <manifests>${project.build.directory}/classes/k3s/</manifests>
                            <portBindings>
                                <!-- tm-forum-api-product-ordering-management -->
                                <portBinding>8081:8081</portBinding>
                                <!-- tm-forum-api-product-catalog -->
                                <portBinding>8082:8082</portBinding>
                                <!-- tm-forum-api-party-catalog -->
                                <portBinding>8083:8083</portBinding>
                                <!-- trusted-issuers-list -->
                                <portBinding>8085:8085</portBinding>
                                <!-- tm-forum-api-agreement -->
                                <portBinding>8086:8086</portBinding>
                                <!-- tm-forum-api-quote -->
                                <portBinding>8087:8087</portBinding>
                                <!-- orion -->
                                <portBinding>1026:1026</portBinding>
                                <!-- rainbow -->
                                <portBinding>1234:1234</portBinding>
                                <portBinding>1235:1235</portBinding>
                            </portBindings>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>oci</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-deploy-plugin</artifactId>
                        <configuration>
                            <skip>true</skip>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>com.google.cloud.tools</groupId>
                        <artifactId>jib-maven-plugin</artifactId>
                        <configuration combine.self="override">
                            <from>
                                <image>registry.access.redhat.com/ubi8/openjdk-21:1.21-1</image>
                            </from>
                            <to>
                                <image>${image.registry}/${image.repository}/${project.artifactId}</image>
                                <tags>
                                    <tag>${project.version}</tag>
                                </tags>
                            </to>
                            <container>
                                <labels>
                                    <!-- oci labels -->
                                    <org.opencontainers.image.authors>${project.author.name} - ${project.author.email}
                                    </org.opencontainers.image.authors>
                                    <org.opencontainers.image.description>${project.description}
                                    </org.opencontainers.image.description>
                                    <org.opencontainers.image.documentation>${project.url}
                                    </org.opencontainers.image.documentation>
                                    <org.opencontainers.image.licenses>${project.license.identifier}
                                    </org.opencontainers.image.licenses>
                                    <org.opencontainers.image.source>${project.url}</org.opencontainers.image.source>
                                    <org.opencontainers.image.title>${project.title}</org.opencontainers.image.title>
                                    <org.opencontainers.image.vendor>${project.vendor}</org.opencontainers.image.vendor>
                                    <org.opencontainers.image.version>${project.version}
                                    </org.opencontainers.image.version>
                                    <org.opencontainers.image.created>${maven.build.timestamp}
                                    </org.opencontainers.image.created>
                                    <org.fiware.contact.localpart>${project.contact.email}
                                    </org.fiware.contact.localpart>
                                    <org.fiware.contact.domain>${project.contact.domain}</org.fiware.contact.domain>
                                    <!-- redhat required labels -->
                                    <name>${project.title}</name>
                                    <description>${project.description}</description>
                                    <authors>${project.author.name} - ${project.author.email}</authors>
                                    <maintainer>${project.author.email}</maintainer>
                                    <documentation>${project.url}</documentation>
                                    <vendor>${project.vendor}</vendor>
                                    <summary>${project.summary}</summary>
                                </labels>
                            </container>
                        </configuration>
                        <executions>
                            <execution>
                                <id>deploy</id>
                                <phase>deploy</phase>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>install</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>dockerBuild</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <!-- can be used to spin up a local dev environment -->
            <id>dev</id>
            <build>
                <plugins>
                    <!-- run tests -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <configuration>
                            <skip>false</skip>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>io.kokuwa.maven</groupId>
                        <artifactId>k3s-maven-plugin</artifactId>
                        <version>${version.io.kokuwa.maven.k3s-plugin}</version>
                        <configuration>
                            <skip>false</skip>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <id>integration-test</id>
            <build>
                <plugins>
                    <!-- run tests -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <configuration>
                            <skip>false</skip>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>io.kokuwa.maven</groupId>
                        <artifactId>k3s-maven-plugin</artifactId>
                        <version>${version.io.kokuwa.maven.k3s-plugin}</version>
                        <configuration>
                            <skip>false</skip>
                        </configuration>
                        <executions>
                            <execution>
                                <id>clean</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>rm</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <id>in-container</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <configuration>
                            <skip>false</skip>
                            <systemPropertyVariables>
                                <micronaut.environments>ga</micronaut.environments>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>com.google.cloud.tools</groupId>
                        <artifactId>jib-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>dockerBuild</goal>
                                </goals>
                                <configuration combine.self="override">
                                    <from>
                                        <image>registry.access.redhat.com/ubi8/openjdk-21:1.21-1</image>
                                    </from>
                                    <to>
                                        <image>contract-management</image>
                                    </to>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy-resources-trust-anchor</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/classes/k3s</outputDirectory>
                                    <resources>
                                        <resource>
                                            <includes>
                                                <include>contract-management.yaml</include>
                                            </includes>
                                            <directory>${project.basedir}/src/test/resources/</directory>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>io.kokuwa.maven</groupId>
                        <artifactId>k3s-maven-plugin</artifactId>
                        <version>${version.io.kokuwa.maven.k3s-plugin}</version>
                        <configuration>
                            <dockerImages>
                                <dockerImage>contract-management</dockerImage>
                            </dockerImages>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
